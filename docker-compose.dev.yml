version: "3.7"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}


services:
  workspace:
    build:
      context: ./.docker/bin/workspace
      args:
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
    ports:
      - ${WORKSPACE_HTTP_PORT}:3032
      - ${WORKSPACE_SSH}:22
      - ${APP_BACKEND_PORT}:3009 # backend_adonis
      - ${APP_BACKEND_NESTJS_PORT}:3010 # backend_nest
      - ${APP_FRONTEND_PORT}:3011 # frontend_next
      - ${APP_ECOMMERCE_PORT}:3012 # ecommerce_next
      - ${APP_STORYBOOK_PORT}:6006 # storybook
    links:
      - mysql
    volumes:
      - ${DOCUMENT_ROOT}:/var/www
    networks:
      - backend

  nginx:
    build:
      context: ./.docker/bin/nginx
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE}
        # - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
      - "${VARNISH_BACKEND_PORT}:81"
    networks:
      - frontend
      - backend

  mysql:
    image: "mysql:8.0"
    restart: 'always'
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
    networks:
      - backend

  postgres:
    build: .docker/bin/postgres
    tty: true
    ports:
      - "3340:5432"
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=postgres

  redis:
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    networks:
      - backend

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
    networks:
      - backend
